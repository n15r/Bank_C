void push(liste *l, char *nom_n, char *prenom_n, char *profession_n, char *Num_tel_n) // normally only needs l
{
    client_data *new_client = (client_data *)malloc(sizeof(client_data));

    if (!new_client || !l)
        return;
    long long randomId;
    client_data *ptr;
    do
    {
        ptr = l->first;
        randomId = CreationRandomId();
        while (ptr != NULL)
        {
            if (ptr->c.Id_client == randomId)
            {
                randomId = CreationRandomId();
                ptr = l->first;
            }
            else
            {
                ptr = ptr->next;
            }
        }
    } while (ptr != NULL);
    new_client->c.Id_client = randomId;
    char nom[50];
    printf("Entrer votre Nom: ");
    fgets(nom, sizeof(nom), stdin);
    if (strlen(nom) > 0 && nom[strlen(nom) - 1] == '\n') // mesures de securite
        nom[strlen(nom) - 1] = '\0';
    strcpy(new_client->c.nom, nom);

    char prenom[50];
    printf("Entrer cotre Prenom:\n");
    fgets(prenom, sizeof(prenom), stdin);
    if (strlen(prenom) > 0 && prenom[strlen(prenom) - 1] == '\n')
        prenom[strlen(prenom) - 1] = '\0';
    strcpy(new_client->c.prenom, prenom);

    char profession[50];
    printf("Enter votre Profession:\n");
    fgets(profession, sizeof(profession), stdin);
    if (strlen(profession) > 0 && profession[strlen(profession) - 1] == '\n')
        profession[strlen(profession) - 1] = '\0';
    strcpy(new_client->c.profession, profession);

    char Num_tel[20];
    printf("Enter votre numero de telephone (Doit commencer par +):\n");
    fgets(Num_tel, sizeof(Num_tel), stdin);
    if (strlen(Num_tel) > 0 && Num_tel[strlen(Num_tel) - 1] == '\n')
        Num_tel[strlen(Num_tel) - 1] = '\0';
    strcpy(new_client->c.Num_tel, Num_tel);
    if (l->first == NULL)
    {
        l->first = new_client;
        l->last = new_client;
    }
    else
    {
        new_client->prev = l->last;
        l->last->next = new_client;
        l->last = new_client;
    }
}